import construct as cs
from construct_dataclasses import dataclass_struct, csfield

@dataclass_struct
class Record:
    type: int = csfield(cs.Int8ub)
    length: int = csfield(cs.Int16ub)
    value: bytes = csfield(cs.Bytes(cs.this.length))

@dataclass_struct
class Frame:
    version: int = csfield(cs.Int8ub)
    command: int = csfield(cs.Int8ub)
    size: int = csfield(cs.Int16sb)
    records: list[Record] = csfield(cs.GreedyRange(Record.struct))


if __name__ == '__main__':
    # Example data to verify the parser
    data = b"\x02\x06\x00\xb1\x02\x00\x0a\x80\x2a\xa8\x53\x58\x7a\xac\x27\x00" \
    b"\x94\x01\x00\x06\x80\x2a\xa8\x53\x58\x7a\x0a\x00\x04\x00\x34\xc0" \
    b"\x2a\x0b\x00\x06\x5a\x69\x30\x30\x30\x31\x0c\x00\x05\x55\x37\x50" \
    b"\x47\x32\x03\x00\x23\x42\x5a\x2e\x71\x63\x61\x39\x35\x36\x78\x5f" \
    b"\x36\x2e\x30\x2e\x32\x31\x2b\x31\x33\x36\x37\x33\x2e\x32\x32\x30" \
    b"\x36\x30\x37\x2e\x32\x30\x30\x34\x16\x00\x0c\x36\x2e\x30\x2e\x32" \
    b"\x31\x2e\x31\x33\x36\x37\x33\x15\x00\x05\x55\x37\x50\x47\x32\x17" \
    b"\x00\x01\x00\x18\x00\x01\x00\x19\x00\x01\x01\x1a\x00\x01\x01\x13" \
    b"\x00\x06\x80\x2a\xa8\x53\x58\x7a\x12\x00\x04\x00\x0a\x81\x32\x1b" \
    b"\x00\x05\x33\x2e\x34\x2e\x31\x27\x00\x08\x1e\xe1\x9b\xe8\x05\x9b" \
    b"\x3e\xcf\x2a\x00\x10\xe4\xa6\x77\x5b\x72\xa3\x46\xc1\x8e\xe1\x9b" \
    b"\xe8\x05\x9b\x3e\xcf"

    frame = Frame.parser.parse(data)
    print(frame)
